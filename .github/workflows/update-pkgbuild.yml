name: Auto updating PKGBUILD
on:
  push:
  schedule:
    -  cron: '0 3,15 * * *'
jobs:
  prepare:
    name: get new pkgver
    runs-on: ubuntu-latest
    outputs:
      pkgver: ${{ steps.get-new-pkgver.outputs.pkgver }}
      version: ${{ steps.get-new-pkgver.outputs.version }}
    steps:
    -   name: get new pkgver
        id: get-new-pkgver
        run: |
          _url=https://ftp.mozilla.org/pub/firefox/nightly
          _version=$(curl "${CURL_OPTS[@]}" ${_url}/latest-mozilla-central-l10n/linux-x86_64/xpi/ | grep "ach.langpack.xpi" | sed "s/^.*>firefox-//; s/\.ach.*//" | sort -n | tail -n 1)
          _build_id_raw="$(curl -s "${_url}/latest-mozilla-central-l10n/firefox-${_version}.ach.linux-x86_64.checksums" | grep '.partial.mar' | cut -d' ' -f4 | grep -E -o '[[:digit:]]{14}' | sort | tail -n1)"
          declare -A _build_id
          _build_id=(
            [year]="${_build_id_raw:0:4}"
            [month]="${_build_id_raw:4:2}"
            [day]="${_build_id_raw:6:2}"
            [hour]="${_build_id_raw:8:2}"
            [min]="${_build_id_raw:10:2}"
            [sec]="${_build_id_raw:12:2}"
            [date]="${_build_id_raw:0:8}"
            [time]="${_build_id_raw:8:6}"
          )
          _build_id_date=${_build_id[date]}
          _build_id_time=${_build_id[time]}
          echo "version=${_version}" >> "${GITHUB_OUTPUT}"
          echo "pkgver=$(printf "%s.%s.%s" ${_version} ${_build_id_date} ${_build_id_time})" >> "${GITHUB_OUTPUT}"
  update_oth_lang:
    runs-on: ubuntu-latest
    needs: prepare
    container: archlinux
    steps:
      -   name: Install dependencies and update
          run: pacman -Syu --noconfirm --noprogressbar --needed base-devel git pacman-contrib
      -   uses: actions/checkout@v4
          with:
            fetch-depth: 0
      -   name: create user for further steps
          run: |
            useradd builder -m
            echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
            chmod -R a+rw .
            pwd
      -   name: upd
          run: sudo -Eu builder sh ./.github/workflows/update-pkgbuild-lang.sh
      -   name: debug
          run: |
            pwd
            ls -laZ
      -   uses: actions/upload-artifact@v4
          with:
            name: new_ver_of_PKGBUILD
            path: |
              firefox-nightly-i18n/
  push_updates:
    runs-on: ubuntu-latest
    needs: [ prepare, update_oth_lang ]
    steps:
    -   uses: actions/checkout@v4
    -   name: remove old ver
        run: rm -rf firefox-nightly-i18n/*
    -   uses: actions/download-artifact@v4
        with:
          name: new_ver_of_PKGBUILD
          path: firefox-nightly-i18n/
    -   uses: actions-js/push@v1.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: "update to ${{ needs.prepare.outputs.pkgver }}"
          branch: main
  publish_to_aur:
    runs-on: ubuntu-latest
    container: archlinux
    needs: [ update_oth_lang,prepare ]
    steps:
    -   name: instll deps
        run: |
          pacman -Syu --noconfirm --needed --overwrite '*' openssh sudo base-devel git fakeroot binutils gcc awk binutils xz libarchive bzip2 coreutils file findutils gettext grep gzip sed ncurses util-linux pacman-contrib debugedit
    -   uses: actions/checkout@v4
    -   name: config ssh
        run: |
          #!/bin/bash
          set -o errexit -o pipefail -o nounset
          echo '::group::Creating builder user'
          useradd --create-home --shell /bin/bash builder
          passwd --delete builder
          mkdir -p /etc/sudoers.d/
          echo "builder  ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/builder
          echo '::endgroup::'
          echo '::group::Initializing SSH directory'
          mkdir -pv /home/builder/.ssh
          touch /home/builder/.ssh/known_hosts
          cp -v ./.github/workflows/ssh_config /home/builder/.ssh/config
          chown -vR builder:builder /home/builder
          chmod -vR 600 /home/builder/.ssh/*
          echo '::endgroup::'
          # Ignore "." and ".." to prevent errors when glob pattern for assets matches hidden files
          GLOBIGNORE=".:.."

          echo '::group::Adding aur.archlinux.org to known hosts'
          ssh_keyscan_types='rsa,ecdsa,ed25519'
          ssh-keyscan -v -t "$ssh_keyscan_types" aur.archlinux.org >> /home/builder/.ssh/known_hosts
          echo '::endgroup::'

          echo '::group::Importing private key'
          echo "${{secrets.AUR_SSH_PRIVATE_KEY}}" > /home/builder/.ssh/aur
          chmod -vR 600 /home/builder/.ssh/aur*
          ssh-keygen -vy -f /home/builder/.ssh/aur > /home/builder/.ssh/aur.pub
          echo '::endgroup::'

          echo '::group::Checksums of SSH keys'
          sha512sum /home/builder/.ssh/aur /home/builder/.ssh/aur.pub
          echo '::endgroup::'
    -   uses: actions/download-artifact@v4
        with:
          name: new_ver_of_PKGBUILD
    -   name: publish
        run: sudo -Eu builder ./.github/workflows/publish2aur.sh