name: Auto updating PKGBUILD
on:
  push:
  schedule:
    -  cron: '0 3,15 * * *'
jobs:
  prepare:
    name: get new pkgver
    runs-on: ubuntu-latest
    outputs:
      pkgver: ${{ steps.get-new-pkgver.outputs.pkgver }}
      version: ${{ steps.get-new-pkgver.outputs.version }}
    steps:
    -   name: get new pkgver
        id: get-new-pkgver
        run: |
          _url=https://ftp.mozilla.org/pub/firefox/nightly
          _version=$(curl "${CURL_OPTS[@]}" ${_url}/latest-mozilla-central-l10n/linux-x86_64/xpi/ | grep "ach.langpack.xpi" | sed "s/^.*>firefox-//; s/\.ach.*//" | sort -n | tail -n 1)
          _build_id_raw="$(curl -s "${_url}/latest-mozilla-central-l10n/firefox-${_version}.ach.linux-x86_64.checksums" | grep '.partial.mar' | cut -d' ' -f4 | grep -E -o '[[:digit:]]{14}' | sort | tail -n1)"
          declare -A _build_id
          _build_id=(
            [year]="${_build_id_raw:0:4}"
            [month]="${_build_id_raw:4:2}"
            [day]="${_build_id_raw:6:2}"
            [hour]="${_build_id_raw:8:2}"
            [min]="${_build_id_raw:10:2}"
            [sec]="${_build_id_raw:12:2}"
            [date]="${_build_id_raw:0:8}"
            [time]="${_build_id_raw:8:6}"
          )
          _build_id_date=${_build_id[date]}
          _build_id_time=${_build_id[time]}
          echo "version=${_version}" >> "${GITHUB_OUTPUT}"
          echo "pkgver=$(printf "%s.%s.%s" ${_version} ${_build_id_date} ${_build_id_time})" >> "${GITHUB_OUTPUT}"
  gen_PKGBUILD:
    runs-on: ubuntu-latest
    container: archlinux
    needs: prepare
    steps:
    -   uses: actions/checkout@v4
    -   name: Install dependencies and update
        run: pacman -Syu --noconfirm --noprogressbar --needed base-devel git pacman-contrib
    -   name: update pkgver
        working-directory: firefox-nightly-i18n
        run: |
          sed -i "s/pkgver=.*$/pkgver=${{ needs.prepare.outputs.pkgver }}/" PKGBUILD
          sed -i "s/_version=.*$/_version=${{ needs.prepare.outputs.version }}/" PKGBUILD
          cat PKGBUILD
    -   name: create user for further steps
        run: |
          useradd builder -m
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          chmod -R a+rw .
    -   name: update the sha256sum in PKGBUILD
        working-directory: firefox-nightly-i18n
        run: |
          sudo -Eu builder updpkgsums
    -   uses: actions/upload-artifact@v4
        with:
          name: new_ver_of_PKGBUILD
          path: |
            firefox-nightly-i18n/PKGBUILD
  push_updates:
    runs-on: ubuntu-latest
    needs: [ prepare, gen_PKGBUILD ]
    steps:
      -   uses: actions/checkout@v4
      -   name: remove old ver
          run: rm -rf firefox-nightly-i18n/PKGBUILD
      -   uses: actions/download-artifact@v4
          with:
            name: new_ver_of_PKGBUILD
            path: firefox-nightly-i18n
      -   uses: Smart-Transportation/push@v1.3
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            message: "update to ${{ needs.prepare.outputs.pkgver }}"
            branch: main
  publish_to_AUR:
    runs-on: ubuntu-latest
    needs: [ prepare,gen_PKGBUILD ]
    steps:
      -   uses: actions/download-artifact@v4
          with:
            name: new_ver_of_PKGBUILD
            path: firefox-nightly-i18n
      -   name: Cat PKGBUILD
          run: cat firefox-nightly-i18n/PKGBUILD
      -   name: Publish AUR package
          uses: KSXGitHub/github-actions-deploy-aur@v3.0.1   
          with:
            pkgname: firefox-nightly-i18n
#            test: true
            updpkgsums: false
            commit_username: "github-actions[bot]"
            commit_email: "41898282+github-actions[bot]@users.noreply.github.com"
            ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
            commit_message: "update to ${{ needs.prepare.outputs.pkgver }}"
            allow_empty_commits: false
            pkgbuild: firefox-nightly-i18n/PKGBUILD