name: Rebuild All Packages.
on:
  workflow_dispatch:
jobs:
  rebuild:
    strategy:
      fail-fast: false
      matrix:
        repo: [python-cyaron, python-cyaron-git, python-xeger-bin, python-xeger-git, python-dnsstamps, python-dnsstamps-git, python-accesser, python-accesser-git, ac-library]
    name: Rebuild
    runs-on: ubuntu-latest
    container: archlinux
    steps:
      - name: Install depends
        run: pacman -Syu --noconfirm --needed --overwrite '*' openssh sudo base-devel git fakeroot binutils gcc awk binutils xz libarchive bzip2 coreutils file findutils gettext grep gzip sed ncurses util-linux pacman-contrib debugedit
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: 'PKGBUILD'
      - name: Cat PKGBUILD
        run: cat PKGBUILD/${{matrix.repo}}/PKGBUILD
      - name: Get the latest commit message\
        id: MSG
        run: |
          cd PKGBUILD
          echo "commit_msg=$(git log -1 --format='%s' -- ${{matrix.repo}}/)" >> "$GITHUB_OUTPUT"
          cd ..
      - uses: actions/checkout@v4
        with:
          repository: 'vifly/arch-build'
      - uses: ./build-aur-action
        with:
          repo-name: ${{ matrix.repo }}
      - uses: actions/upload-artifact@v4
        with:
          path: ./*/*.pkg.tar.zst
          name: ${{ matrix.repo }}
          if-no-files-found: error
  create_database:
    runs-on: ubuntu-latest
    if: always()
    needs: [rebuild]
    outputs:
      need_upload: ${{steps.check.outputs.need_upload}}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'Sving1024/arch-repo'
      - uses: actions/download-artifact@v4
        id: download
      - name: check
        id: check
        run: |
          if [ "$(find ./ -type f -name "*.tar.zst")" == "" ]; then
            echo "need_upload=0" >> $GITHUB_OUTPUT
            echo "need_upload=0"
          else
            echo "need_upload=1" >> $GITHUB_OUTPUT
            echo "need_upload=1"
          fi
      - name: Display structure of downloaded files
        run: ls -R ${{ steps.download.outputs.download-path }}
      - uses: ./create-db
        if: steps.check.outputs.need_upload == 1
        with:
          RCLONE_CONFIG_CONTENT: ${{secrets.RCLONE_CONFIG}}
          RCLONE_CONFIG_NAME: r2
          dest_path: /repo/archlinux/
          repo_name: archlinux-sving1024
          gpg-privatekey: ${{ secrets.gpg_private_key }}
          local_path: ${{ steps.download.outputs.download-path }}
      - uses: actions/upload-artifact@v4
        with:
          name: database
          path: upload_packages
  uploadToRemote:
    strategy:
      fail-fast: false
      matrix:
        remote: [onedrive, r2]
    runs-on: ubuntu-latest
    needs: [create_database]
    if: needs.create_database.outputs.need_upload == 1 && always()
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'Sving1024/arch-repo'
      - uses: actions/download-artifact@v4
        id: download
        with:
          name: database
      - name: Display structure of downloaded files
        run: ls -R ${{ steps.download.outputs.download-path }}
      - uses: ./upload
        with:
          RCLONE_CONFIG_CONTENT: ${{secrets.RCLONE_CONFIG}}
          RCLONE_CONFIG_NAME: ${{matrix.remote}}
          dest_path: /repo/archlinux/
          repo_name: archlinux-sving1024
          local_path: ${{ steps.download.outputs.download-path }}
